"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/contexts/WebSocketContext.tsx":
/*!*******************************************!*\
  !*** ./src/contexts/WebSocketContext.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: function() { return /* binding */ WebSocketProvider; },\n/* harmony export */   useWebSocket: function() { return /* binding */ useWebSocket; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useWebSocket,WebSocketProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst defaultGameState = {\n    dealer_hand: [],\n    players: {},\n    game_phase: \"waiting\",\n    winners: [],\n    min_bet: 10,\n    max_bet: 1000,\n    table_number: 1\n};\nconst WebSocketContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    ws: null,\n    gameState: defaultGameState,\n    sendMessage: ()=>{},\n    isConnected: false,\n    notifications: [],\n    addNotification: ()=>{},\n    removeNotification: ()=>{}\n});\nconst useWebSocket = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WebSocketContext);\n};\n_s(useWebSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst WebSocketProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [ws, setWs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [gameState, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultGameState);\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [notifications, setNotifications] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [previousGameState, setPreviousGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const addNotification = (message, type)=>{\n        const id = Math.random().toString(36).substr(2, 9);\n        setNotifications((prev)=>[\n                ...prev,\n                {\n                    id,\n                    message,\n                    type\n                }\n            ]);\n    };\n    const removeNotification = (id)=>{\n        setNotifications((prev)=>prev.filter((notification)=>notification.id !== id));\n    };\n    const determineUndoneAction = (oldState, newState)=>{\n        // Check if it was a reveal hands action\n        if (oldState.game_phase === \"revealed\" && newState.game_phase !== \"revealed\") {\n            return \"Hand reveal\";\n        }\n        // Check if it was a deal cards action\n        const oldDealerCards = oldState.dealer_hand.length;\n        const newDealerCards = newState.dealer_hand.length;\n        if (oldDealerCards === 3 && newDealerCards === 0) {\n            return \"Card deal\";\n        }\n        // Check if it was a player action (play/surrender)\n        for (const [playerId, oldPlayer] of Object.entries(oldState.players)){\n            const newPlayer = newState.players[playerId];\n            if (oldPlayer.has_acted && !newPlayer.has_acted) {\n                return \"\".concat(playerId, \"'s \").concat(oldPlayer.action_type || \"action\");\n            }\n        }\n        // Check if it was a card addition\n        for (const [playerId, oldPlayer] of Object.entries(oldState.players)){\n            const newPlayer = newState.players[playerId];\n            if (oldPlayer.hand.length > newPlayer.hand.length) {\n                return \"Card addition to \".concat(playerId);\n            }\n        }\n        if (oldState.dealer_hand.length > newState.dealer_hand.length) {\n            return \"Card addition to dealer\";\n        }\n        // Check if it was a player add/remove\n        for (const [playerId, oldPlayer] of Object.entries(oldState.players)){\n            const newPlayer = newState.players[playerId];\n            if (oldPlayer.active && !newPlayer.active) {\n                return \"Player \".concat(playerId, \" removal\");\n            }\n            if (!oldPlayer.active && newPlayer.active) {\n                return \"Player \".concat(playerId, \" addition\");\n            }\n        }\n        // Default case\n        return \"Last action\";\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let websocket;\n        let reconnectTimeout;\n        const connect = ()=>{\n            websocket = new WebSocket(\"ws://localhost:6789\");\n            websocket.onopen = ()=>{\n                console.log(\"Connected to WebSocket\");\n                setIsConnected(true);\n                if (reconnectTimeout) {\n                    clearTimeout(reconnectTimeout);\n                }\n            };\n            websocket.onclose = ()=>{\n                console.log(\"Disconnected from WebSocket\");\n                setIsConnected(false);\n                setWs(null);\n                addNotification(\"Disconnected from server\", \"error\");\n                // Attempt to reconnect after 2 seconds\n                reconnectTimeout = setTimeout(()=>{\n                    console.log(\"Attempting to reconnect...\");\n                    connect();\n                }, 2000);\n            };\n            websocket.onerror = (error)=>{\n                console.error(\"WebSocket error:\", error);\n                addNotification(\"Connection error occurred\", \"error\");\n            };\n            websocket.onmessage = (event)=>{\n                try {\n                    const data = JSON.parse(event.data);\n                    switch(data.action){\n                        case \"update_game\":\n                        case \"cards_dealt\":\n                        case \"hands_revealed\":\n                            setPreviousGameState(gameState);\n                            setGameState(data.game_state);\n                            break;\n                        case \"player_added\":\n                        case \"player_removed\":\n                            setPreviousGameState(gameState);\n                            setGameState((prev)=>({\n                                    ...prev,\n                                    players: data.players\n                                }));\n                            break;\n                        case \"table_reset\":\n                            setPreviousGameState(gameState);\n                            setGameState(data.game_state);\n                            break;\n                        case \"undo_completed\":\n                            if (previousGameState) {\n                                const undoneAction = determineUndoneAction(previousGameState, data.game_state);\n                                addNotification(\"Undid \".concat(undoneAction), \"info\");\n                            }\n                            setPreviousGameState(gameState);\n                            setGameState(data.game_state);\n                            break;\n                        case \"duplicate_card\":\n                            addNotification(\"Duplicate card detected\", \"error\");\n                            break;\n                        case \"error\":\n                            addNotification(data.message, \"error\");\n                            break;\n                        case \"card_added\":\n                            addNotification(\"Card added to \".concat(data.target), \"success\");\n                            break;\n                        default:\n                            console.log(\"Unhandled message:\", data);\n                    }\n                } catch (error) {\n                    console.error(\"Error processing message:\", error);\n                    addNotification(\"Error processing server message\", \"error\");\n                }\n            };\n            setWs(websocket);\n        };\n        connect();\n        return ()=>{\n            if (websocket) {\n                websocket.close();\n            }\n            if (reconnectTimeout) {\n                clearTimeout(reconnectTimeout);\n            }\n        };\n    }, []);\n    const [messageQueue, setMessageQueue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Process queued messages when connection is established\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isConnected && messageQueue.length > 0) {\n            messageQueue.forEach((message)=>{\n                if ((ws === null || ws === void 0 ? void 0 : ws.readyState) === WebSocket.OPEN) {\n                    ws.send(JSON.stringify(message));\n                }\n            });\n            setMessageQueue([]);\n        }\n    }, [\n        isConnected,\n        messageQueue,\n        ws\n    ]);\n    const sendMessage = (message)=>{\n        try {\n            if ((ws === null || ws === void 0 ? void 0 : ws.readyState) === WebSocket.OPEN) {\n                ws.send(JSON.stringify(message));\n            } else {\n                console.log(\"WebSocket not ready, queueing message\");\n                setMessageQueue((prev)=>[\n                        ...prev,\n                        message\n                    ]);\n            }\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n            setMessageQueue((prev)=>[\n                    ...prev,\n                    message\n                ]);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WebSocketContext.Provider, {\n        value: {\n            ws,\n            gameState,\n            sendMessage,\n            isConnected,\n            notifications,\n            addNotification,\n            removeNotification\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\Projects\\\\solunation\\\\miniflush\\\\src\\\\contexts\\\\WebSocketContext.tsx\",\n        lineNumber: 251,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(WebSocketProvider, \"YVHv8QI7+EXfXcCKzJxxQwylb1A=\");\n_c = WebSocketProvider;\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0cy9XZWJTb2NrZXRDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRThFO0FBcUM5RSxNQUFNSyxtQkFBOEI7SUFDbENDLGFBQWEsRUFBRTtJQUNmQyxTQUFTLENBQUM7SUFDVkMsWUFBWTtJQUNaQyxTQUFTLEVBQUU7SUFDWEMsU0FBUztJQUNUQyxTQUFTO0lBQ1RDLGNBQWM7QUFDaEI7QUFFQSxNQUFNQyxpQ0FBbUJaLG9EQUFhQSxDQUF1QjtJQUMzRGEsSUFBSTtJQUNKQyxXQUFXVjtJQUNYVyxhQUFhLEtBQU87SUFDcEJDLGFBQWE7SUFDYkMsZUFBZSxFQUFFO0lBQ2pCQyxpQkFBaUIsS0FBTztJQUN4QkMsb0JBQW9CLEtBQU87QUFDN0I7QUFFTyxNQUFNQyxlQUFlOztJQUFNbkIsT0FBQUEsaURBQVVBLENBQUNXO0FBQWdCLEVBQUU7R0FBbERRO0FBRU4sTUFBTUMsb0JBQTZEO1FBQUMsRUFBRUMsUUFBUSxFQUFFOztJQUNyRixNQUFNLENBQUNULElBQUlVLE1BQU0sR0FBR3BCLCtDQUFRQSxDQUFtQjtJQUMvQyxNQUFNLENBQUNXLFdBQVdVLGFBQWEsR0FBR3JCLCtDQUFRQSxDQUFZQztJQUN0RCxNQUFNLENBQUNZLGFBQWFTLGVBQWUsR0FBR3RCLCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQ2MsZUFBZVMsaUJBQWlCLEdBQUd2QiwrQ0FBUUEsQ0FBaUIsRUFBRTtJQUNyRSxNQUFNLENBQUN3QixtQkFBbUJDLHFCQUFxQixHQUFHekIsK0NBQVFBLENBQW1CO0lBRTdFLE1BQU1lLGtCQUFrQixDQUFDVyxTQUFpQkM7UUFDeEMsTUFBTUMsS0FBS0MsS0FBS0MsTUFBTSxHQUFHQyxRQUFRLENBQUMsSUFBSUMsTUFBTSxDQUFDLEdBQUc7UUFDaERULGlCQUFpQlUsQ0FBQUEsT0FBUTttQkFBSUE7Z0JBQU07b0JBQUVMO29CQUFJRjtvQkFBU0M7Z0JBQUs7YUFBRTtJQUMzRDtJQUVBLE1BQU1YLHFCQUFxQixDQUFDWTtRQUMxQkwsaUJBQWlCVSxDQUFBQSxPQUFRQSxLQUFLQyxNQUFNLENBQUNDLENBQUFBLGVBQWdCQSxhQUFhUCxFQUFFLEtBQUtBO0lBQzNFO0lBRUEsTUFBTVEsd0JBQXdCLENBQUNDLFVBQXFCQztRQUNsRCx3Q0FBd0M7UUFDeEMsSUFBSUQsU0FBU2pDLFVBQVUsS0FBSyxjQUFja0MsU0FBU2xDLFVBQVUsS0FBSyxZQUFZO1lBQzVFLE9BQU87UUFDVDtRQUVBLHNDQUFzQztRQUN0QyxNQUFNbUMsaUJBQWlCRixTQUFTbkMsV0FBVyxDQUFDc0MsTUFBTTtRQUNsRCxNQUFNQyxpQkFBaUJILFNBQVNwQyxXQUFXLENBQUNzQyxNQUFNO1FBQ2xELElBQUlELG1CQUFtQixLQUFLRSxtQkFBbUIsR0FBRztZQUNoRCxPQUFPO1FBQ1Q7UUFFQSxtREFBbUQ7UUFDbkQsS0FBSyxNQUFNLENBQUNDLFVBQVVDLFVBQVUsSUFBSUMsT0FBT0MsT0FBTyxDQUFDUixTQUFTbEMsT0FBTyxFQUFHO1lBQ3BFLE1BQU0yQyxZQUFZUixTQUFTbkMsT0FBTyxDQUFDdUMsU0FBUztZQUM1QyxJQUFJQyxVQUFVSSxTQUFTLElBQUksQ0FBQ0QsVUFBVUMsU0FBUyxFQUFFO2dCQUMvQyxPQUFPLEdBQWlCSixPQUFkRCxVQUFTLE9BQXVDLE9BQWxDQyxVQUFVSyxXQUFXLElBQUk7WUFDbkQ7UUFDRjtRQUVBLGtDQUFrQztRQUNsQyxLQUFLLE1BQU0sQ0FBQ04sVUFBVUMsVUFBVSxJQUFJQyxPQUFPQyxPQUFPLENBQUNSLFNBQVNsQyxPQUFPLEVBQUc7WUFDcEUsTUFBTTJDLFlBQVlSLFNBQVNuQyxPQUFPLENBQUN1QyxTQUFTO1lBQzVDLElBQUlDLFVBQVVNLElBQUksQ0FBQ1QsTUFBTSxHQUFHTSxVQUFVRyxJQUFJLENBQUNULE1BQU0sRUFBRTtnQkFDakQsT0FBTyxvQkFBNkIsT0FBVEU7WUFDN0I7UUFDRjtRQUNBLElBQUlMLFNBQVNuQyxXQUFXLENBQUNzQyxNQUFNLEdBQUdGLFNBQVNwQyxXQUFXLENBQUNzQyxNQUFNLEVBQUU7WUFDN0QsT0FBTztRQUNUO1FBRUEsc0NBQXNDO1FBQ3RDLEtBQUssTUFBTSxDQUFDRSxVQUFVQyxVQUFVLElBQUlDLE9BQU9DLE9BQU8sQ0FBQ1IsU0FBU2xDLE9BQU8sRUFBRztZQUNwRSxNQUFNMkMsWUFBWVIsU0FBU25DLE9BQU8sQ0FBQ3VDLFNBQVM7WUFDNUMsSUFBSUMsVUFBVU8sTUFBTSxJQUFJLENBQUNKLFVBQVVJLE1BQU0sRUFBRTtnQkFDekMsT0FBTyxVQUFtQixPQUFUUixVQUFTO1lBQzVCO1lBQ0EsSUFBSSxDQUFDQyxVQUFVTyxNQUFNLElBQUlKLFVBQVVJLE1BQU0sRUFBRTtnQkFDekMsT0FBTyxVQUFtQixPQUFUUixVQUFTO1lBQzVCO1FBQ0Y7UUFFQSxlQUFlO1FBQ2YsT0FBTztJQUNUO0lBRUEzQyxnREFBU0EsQ0FBQztRQUNSLElBQUlvRDtRQUNKLElBQUlDO1FBRUosTUFBTUMsVUFBVTtZQUNkRixZQUFZLElBQUlHLFVBQVU7WUFFMUJILFVBQVVJLE1BQU0sR0FBRztnQkFDakJDLFFBQVFDLEdBQUcsQ0FBQztnQkFDWm5DLGVBQWU7Z0JBQ2YsSUFBSThCLGtCQUFrQjtvQkFDcEJNLGFBQWFOO2dCQUNmO1lBQ0Y7WUFFQUQsVUFBVVEsT0FBTyxHQUFHO2dCQUNsQkgsUUFBUUMsR0FBRyxDQUFDO2dCQUNabkMsZUFBZTtnQkFDZkYsTUFBTTtnQkFDTkwsZ0JBQWdCLDRCQUE0QjtnQkFFNUMsdUNBQXVDO2dCQUN2Q3FDLG1CQUFtQlEsV0FBVztvQkFDNUJKLFFBQVFDLEdBQUcsQ0FBQztvQkFDWko7Z0JBQ0YsR0FBRztZQUNMO1lBRUFGLFVBQVVVLE9BQU8sR0FBRyxDQUFDQztnQkFDbkJOLFFBQVFNLEtBQUssQ0FBQyxvQkFBb0JBO2dCQUNsQy9DLGdCQUFnQiw2QkFBNkI7WUFDL0M7WUFFQW9DLFVBQVVZLFNBQVMsR0FBRyxDQUFDQztnQkFDckIsSUFBSTtvQkFDRixNQUFNQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNILE1BQU1DLElBQUk7b0JBRWxDLE9BQVFBLEtBQUtHLE1BQU07d0JBQ2pCLEtBQUs7d0JBQ0wsS0FBSzt3QkFDTCxLQUFLOzRCQUNIM0MscUJBQXFCZDs0QkFDckJVLGFBQWE0QyxLQUFLSSxVQUFVOzRCQUM1Qjt3QkFDRixLQUFLO3dCQUNMLEtBQUs7NEJBQ0g1QyxxQkFBcUJkOzRCQUNyQlUsYUFBYVksQ0FBQUEsT0FBUztvQ0FDcEIsR0FBR0EsSUFBSTtvQ0FDUDlCLFNBQVM4RCxLQUFLOUQsT0FBTztnQ0FDdkI7NEJBQ0E7d0JBQ0YsS0FBSzs0QkFDSHNCLHFCQUFxQmQ7NEJBQ3JCVSxhQUFhNEMsS0FBS0ksVUFBVTs0QkFDNUI7d0JBQ0YsS0FBSzs0QkFDSCxJQUFJN0MsbUJBQW1CO2dDQUNyQixNQUFNOEMsZUFBZWxDLHNCQUFzQlosbUJBQW1CeUMsS0FBS0ksVUFBVTtnQ0FDN0V0RCxnQkFBZ0IsU0FBc0IsT0FBYnVELGVBQWdCOzRCQUMzQzs0QkFDQTdDLHFCQUFxQmQ7NEJBQ3JCVSxhQUFhNEMsS0FBS0ksVUFBVTs0QkFDNUI7d0JBQ0YsS0FBSzs0QkFDSHRELGdCQUFnQiwyQkFBMkI7NEJBQzNDO3dCQUNGLEtBQUs7NEJBQ0hBLGdCQUFnQmtELEtBQUt2QyxPQUFPLEVBQUU7NEJBQzlCO3dCQUNGLEtBQUs7NEJBQ0hYLGdCQUFnQixpQkFBNkIsT0FBWmtELEtBQUtNLE1BQU0sR0FBSTs0QkFDaEQ7d0JBQ0Y7NEJBQ0VmLFFBQVFDLEdBQUcsQ0FBQyxzQkFBc0JRO29CQUN0QztnQkFDRixFQUFFLE9BQU9ILE9BQU87b0JBQ2ROLFFBQVFNLEtBQUssQ0FBQyw2QkFBNkJBO29CQUMzQy9DLGdCQUFnQixtQ0FBbUM7Z0JBQ3JEO1lBQ0Y7WUFFQUssTUFBTStCO1FBQ1I7UUFFQUU7UUFFQSxPQUFPO1lBQ0wsSUFBSUYsV0FBVztnQkFDYkEsVUFBVXFCLEtBQUs7WUFDakI7WUFDQSxJQUFJcEIsa0JBQWtCO2dCQUNwQk0sYUFBYU47WUFDZjtRQUNGO0lBQ0YsR0FBRyxFQUFFO0lBRUwsTUFBTSxDQUFDcUIsY0FBY0MsZ0JBQWdCLEdBQUcxRSwrQ0FBUUEsQ0FBUSxFQUFFO0lBRTFELHlEQUF5RDtJQUN6REQsZ0RBQVNBLENBQUM7UUFDUixJQUFJYyxlQUFlNEQsYUFBYWpDLE1BQU0sR0FBRyxHQUFHO1lBQzFDaUMsYUFBYUUsT0FBTyxDQUFDakQsQ0FBQUE7Z0JBQ25CLElBQUloQixDQUFBQSxlQUFBQSx5QkFBQUEsR0FBSWtFLFVBQVUsTUFBS3RCLFVBQVV1QixJQUFJLEVBQUU7b0JBQ3JDbkUsR0FBR29FLElBQUksQ0FBQ1osS0FBS2EsU0FBUyxDQUFDckQ7Z0JBQ3pCO1lBQ0Y7WUFDQWdELGdCQUFnQixFQUFFO1FBQ3BCO0lBQ0YsR0FBRztRQUFDN0Q7UUFBYTREO1FBQWMvRDtLQUFHO0lBRWxDLE1BQU1FLGNBQWMsQ0FBQ2M7UUFDbkIsSUFBSTtZQUNGLElBQUloQixDQUFBQSxlQUFBQSx5QkFBQUEsR0FBSWtFLFVBQVUsTUFBS3RCLFVBQVV1QixJQUFJLEVBQUU7Z0JBQ3JDbkUsR0FBR29FLElBQUksQ0FBQ1osS0FBS2EsU0FBUyxDQUFDckQ7WUFDekIsT0FBTztnQkFDTDhCLFFBQVFDLEdBQUcsQ0FBQztnQkFDWmlCLGdCQUFnQnpDLENBQUFBLE9BQVE7MkJBQUlBO3dCQUFNUDtxQkFBUTtZQUM1QztRQUNGLEVBQUUsT0FBT29DLE9BQU87WUFDZE4sUUFBUU0sS0FBSyxDQUFDLDBCQUEwQkE7WUFDeENZLGdCQUFnQnpDLENBQUFBLE9BQVE7dUJBQUlBO29CQUFNUDtpQkFBUTtRQUM1QztJQUNGO0lBRUEscUJBQ0UsOERBQUNqQixpQkFBaUJ1RSxRQUFRO1FBQUNDLE9BQU87WUFDaEN2RTtZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztRQUNGO2tCQUNHRzs7Ozs7O0FBR1AsRUFBRTtJQXpNV0Q7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbnRleHRzL1dlYlNvY2tldENvbnRleHQudHN4Pzk3ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IE5vdGlmaWNhdGlvblR5cGUgfSBmcm9tICdAL2NvbXBvbmVudHMvTm90aWZpY2F0aW9uJztcclxuXHJcbmludGVyZmFjZSBOb3RpZmljYXRpb24ge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgbWVzc2FnZTogc3RyaW5nO1xyXG4gIHR5cGU6IE5vdGlmaWNhdGlvblR5cGU7XHJcbn1cclxuXHJcbmludGVyZmFjZSBHYW1lU3RhdGUge1xyXG4gIGRlYWxlcl9oYW5kOiBzdHJpbmdbXTtcclxuICBkZWFsZXJfY29tYmluYXRpb24/OiBzdHJpbmc7XHJcbiAgcGxheWVyczoge1xyXG4gICAgW2tleTogc3RyaW5nXToge1xyXG4gICAgICBoYW5kOiBzdHJpbmdbXTtcclxuICAgICAgYWN0aXZlOiBib29sZWFuO1xyXG4gICAgICByZXN1bHQ6IHN0cmluZyB8IG51bGw7XHJcbiAgICAgIGNvbWJpbmF0aW9uPzogc3RyaW5nO1xyXG4gICAgfTtcclxuICB9O1xyXG4gIGdhbWVfcGhhc2U6IHN0cmluZztcclxuICB3aW5uZXJzOiBzdHJpbmdbXTtcclxuICBtaW5fYmV0OiBudW1iZXI7XHJcbiAgbWF4X2JldDogbnVtYmVyO1xyXG4gIHRhYmxlX251bWJlcjogbnVtYmVyO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgV2ViU29ja2V0Q29udGV4dFR5cGUge1xyXG4gIHdzOiBXZWJTb2NrZXQgfCBudWxsO1xyXG4gIGdhbWVTdGF0ZTogR2FtZVN0YXRlO1xyXG4gIHNlbmRNZXNzYWdlOiAobWVzc2FnZTogYW55KSA9PiB2b2lkO1xyXG4gIGlzQ29ubmVjdGVkOiBib29sZWFuO1xyXG4gIG5vdGlmaWNhdGlvbnM6IE5vdGlmaWNhdGlvbltdO1xyXG4gIGFkZE5vdGlmaWNhdGlvbjogKG1lc3NhZ2U6IHN0cmluZywgdHlwZTogTm90aWZpY2F0aW9uVHlwZSkgPT4gdm9pZDtcclxuICByZW1vdmVOb3RpZmljYXRpb246IChpZDogc3RyaW5nKSA9PiB2b2lkO1xyXG59XHJcblxyXG5jb25zdCBkZWZhdWx0R2FtZVN0YXRlOiBHYW1lU3RhdGUgPSB7XHJcbiAgZGVhbGVyX2hhbmQ6IFtdLFxyXG4gIHBsYXllcnM6IHt9LFxyXG4gIGdhbWVfcGhhc2U6ICd3YWl0aW5nJyxcclxuICB3aW5uZXJzOiBbXSxcclxuICBtaW5fYmV0OiAxMCxcclxuICBtYXhfYmV0OiAxMDAwLFxyXG4gIHRhYmxlX251bWJlcjogMVxyXG59O1xyXG5cclxuY29uc3QgV2ViU29ja2V0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8V2ViU29ja2V0Q29udGV4dFR5cGU+KHtcclxuICB3czogbnVsbCxcclxuICBnYW1lU3RhdGU6IGRlZmF1bHRHYW1lU3RhdGUsXHJcbiAgc2VuZE1lc3NhZ2U6ICgpID0+IHt9LFxyXG4gIGlzQ29ubmVjdGVkOiBmYWxzZSxcclxuICBub3RpZmljYXRpb25zOiBbXSxcclxuICBhZGROb3RpZmljYXRpb246ICgpID0+IHt9LFxyXG4gIHJlbW92ZU5vdGlmaWNhdGlvbjogKCkgPT4ge31cclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgdXNlV2ViU29ja2V0ID0gKCkgPT4gdXNlQ29udGV4dChXZWJTb2NrZXRDb250ZXh0KTtcclxuXHJcbmV4cG9ydCBjb25zdCBXZWJTb2NrZXRQcm92aWRlcjogUmVhY3QuRkM8eyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xyXG4gIGNvbnN0IFt3cywgc2V0V3NdID0gdXNlU3RhdGU8V2ViU29ja2V0IHwgbnVsbD4obnVsbCk7XHJcbiAgY29uc3QgW2dhbWVTdGF0ZSwgc2V0R2FtZVN0YXRlXSA9IHVzZVN0YXRlPEdhbWVTdGF0ZT4oZGVmYXVsdEdhbWVTdGF0ZSk7XHJcbiAgY29uc3QgW2lzQ29ubmVjdGVkLCBzZXRJc0Nvbm5lY3RlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW25vdGlmaWNhdGlvbnMsIHNldE5vdGlmaWNhdGlvbnNdID0gdXNlU3RhdGU8Tm90aWZpY2F0aW9uW10+KFtdKTtcclxuICBjb25zdCBbcHJldmlvdXNHYW1lU3RhdGUsIHNldFByZXZpb3VzR2FtZVN0YXRlXSA9IHVzZVN0YXRlPEdhbWVTdGF0ZSB8IG51bGw+KG51bGwpO1xyXG5cclxuICBjb25zdCBhZGROb3RpZmljYXRpb24gPSAobWVzc2FnZTogc3RyaW5nLCB0eXBlOiBOb3RpZmljYXRpb25UeXBlKSA9PiB7XHJcbiAgICBjb25zdCBpZCA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KTtcclxuICAgIHNldE5vdGlmaWNhdGlvbnMocHJldiA9PiBbLi4ucHJldiwgeyBpZCwgbWVzc2FnZSwgdHlwZSB9XSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgcmVtb3ZlTm90aWZpY2F0aW9uID0gKGlkOiBzdHJpbmcpID0+IHtcclxuICAgIHNldE5vdGlmaWNhdGlvbnMocHJldiA9PiBwcmV2LmZpbHRlcihub3RpZmljYXRpb24gPT4gbm90aWZpY2F0aW9uLmlkICE9PSBpZCkpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGRldGVybWluZVVuZG9uZUFjdGlvbiA9IChvbGRTdGF0ZTogR2FtZVN0YXRlLCBuZXdTdGF0ZTogR2FtZVN0YXRlKTogc3RyaW5nID0+IHtcclxuICAgIC8vIENoZWNrIGlmIGl0IHdhcyBhIHJldmVhbCBoYW5kcyBhY3Rpb25cclxuICAgIGlmIChvbGRTdGF0ZS5nYW1lX3BoYXNlID09PSAncmV2ZWFsZWQnICYmIG5ld1N0YXRlLmdhbWVfcGhhc2UgIT09ICdyZXZlYWxlZCcpIHtcclxuICAgICAgcmV0dXJuICdIYW5kIHJldmVhbCc7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgaXQgd2FzIGEgZGVhbCBjYXJkcyBhY3Rpb25cclxuICAgIGNvbnN0IG9sZERlYWxlckNhcmRzID0gb2xkU3RhdGUuZGVhbGVyX2hhbmQubGVuZ3RoO1xyXG4gICAgY29uc3QgbmV3RGVhbGVyQ2FyZHMgPSBuZXdTdGF0ZS5kZWFsZXJfaGFuZC5sZW5ndGg7XHJcbiAgICBpZiAob2xkRGVhbGVyQ2FyZHMgPT09IDMgJiYgbmV3RGVhbGVyQ2FyZHMgPT09IDApIHtcclxuICAgICAgcmV0dXJuICdDYXJkIGRlYWwnO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENoZWNrIGlmIGl0IHdhcyBhIHBsYXllciBhY3Rpb24gKHBsYXkvc3VycmVuZGVyKVxyXG4gICAgZm9yIChjb25zdCBbcGxheWVySWQsIG9sZFBsYXllcl0gb2YgT2JqZWN0LmVudHJpZXMob2xkU3RhdGUucGxheWVycykpIHtcclxuICAgICAgY29uc3QgbmV3UGxheWVyID0gbmV3U3RhdGUucGxheWVyc1twbGF5ZXJJZF07XHJcbiAgICAgIGlmIChvbGRQbGF5ZXIuaGFzX2FjdGVkICYmICFuZXdQbGF5ZXIuaGFzX2FjdGVkKSB7XHJcbiAgICAgICAgcmV0dXJuIGAke3BsYXllcklkfSdzICR7b2xkUGxheWVyLmFjdGlvbl90eXBlIHx8ICdhY3Rpb24nfWA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBDaGVjayBpZiBpdCB3YXMgYSBjYXJkIGFkZGl0aW9uXHJcbiAgICBmb3IgKGNvbnN0IFtwbGF5ZXJJZCwgb2xkUGxheWVyXSBvZiBPYmplY3QuZW50cmllcyhvbGRTdGF0ZS5wbGF5ZXJzKSkge1xyXG4gICAgICBjb25zdCBuZXdQbGF5ZXIgPSBuZXdTdGF0ZS5wbGF5ZXJzW3BsYXllcklkXTtcclxuICAgICAgaWYgKG9sZFBsYXllci5oYW5kLmxlbmd0aCA+IG5ld1BsYXllci5oYW5kLmxlbmd0aCkge1xyXG4gICAgICAgIHJldHVybiBgQ2FyZCBhZGRpdGlvbiB0byAke3BsYXllcklkfWA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChvbGRTdGF0ZS5kZWFsZXJfaGFuZC5sZW5ndGggPiBuZXdTdGF0ZS5kZWFsZXJfaGFuZC5sZW5ndGgpIHtcclxuICAgICAgcmV0dXJuICdDYXJkIGFkZGl0aW9uIHRvIGRlYWxlcic7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgaXQgd2FzIGEgcGxheWVyIGFkZC9yZW1vdmVcclxuICAgIGZvciAoY29uc3QgW3BsYXllcklkLCBvbGRQbGF5ZXJdIG9mIE9iamVjdC5lbnRyaWVzKG9sZFN0YXRlLnBsYXllcnMpKSB7XHJcbiAgICAgIGNvbnN0IG5ld1BsYXllciA9IG5ld1N0YXRlLnBsYXllcnNbcGxheWVySWRdO1xyXG4gICAgICBpZiAob2xkUGxheWVyLmFjdGl2ZSAmJiAhbmV3UGxheWVyLmFjdGl2ZSkge1xyXG4gICAgICAgIHJldHVybiBgUGxheWVyICR7cGxheWVySWR9IHJlbW92YWxgO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICghb2xkUGxheWVyLmFjdGl2ZSAmJiBuZXdQbGF5ZXIuYWN0aXZlKSB7XHJcbiAgICAgICAgcmV0dXJuIGBQbGF5ZXIgJHtwbGF5ZXJJZH0gYWRkaXRpb25gO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRGVmYXVsdCBjYXNlXHJcbiAgICByZXR1cm4gJ0xhc3QgYWN0aW9uJztcclxuICB9O1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgbGV0IHdlYnNvY2tldDogV2ViU29ja2V0O1xyXG4gICAgbGV0IHJlY29ubmVjdFRpbWVvdXQ6IE5vZGVKUy5UaW1lb3V0O1xyXG5cclxuICAgIGNvbnN0IGNvbm5lY3QgPSAoKSA9PiB7XHJcbiAgICAgIHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoJ3dzOi8vbG9jYWxob3N0OjY3ODknKTtcclxuXHJcbiAgICAgIHdlYnNvY2tldC5vbm9wZW4gPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBXZWJTb2NrZXQnKTtcclxuICAgICAgICBzZXRJc0Nvbm5lY3RlZCh0cnVlKTtcclxuICAgICAgICBpZiAocmVjb25uZWN0VGltZW91dCkge1xyXG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHJlY29ubmVjdFRpbWVvdXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIHdlYnNvY2tldC5vbmNsb3NlID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdEaXNjb25uZWN0ZWQgZnJvbSBXZWJTb2NrZXQnKTtcclxuICAgICAgICBzZXRJc0Nvbm5lY3RlZChmYWxzZSk7XHJcbiAgICAgICAgc2V0V3MobnVsbCk7XHJcbiAgICAgICAgYWRkTm90aWZpY2F0aW9uKCdEaXNjb25uZWN0ZWQgZnJvbSBzZXJ2ZXInLCAnZXJyb3InKTtcclxuXHJcbiAgICAgICAgLy8gQXR0ZW1wdCB0byByZWNvbm5lY3QgYWZ0ZXIgMiBzZWNvbmRzXHJcbiAgICAgICAgcmVjb25uZWN0VGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ0F0dGVtcHRpbmcgdG8gcmVjb25uZWN0Li4uJyk7XHJcbiAgICAgICAgICBjb25uZWN0KCk7XHJcbiAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICB3ZWJzb2NrZXQub25lcnJvciA9IChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1dlYlNvY2tldCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgICAgYWRkTm90aWZpY2F0aW9uKCdDb25uZWN0aW9uIGVycm9yIG9jY3VycmVkJywgJ2Vycm9yJyk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICB3ZWJzb2NrZXQub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBzd2l0Y2ggKGRhdGEuYWN0aW9uKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ3VwZGF0ZV9nYW1lJzpcclxuICAgICAgICAgICAgY2FzZSAnY2FyZHNfZGVhbHQnOlxyXG4gICAgICAgICAgICBjYXNlICdoYW5kc19yZXZlYWxlZCc6XHJcbiAgICAgICAgICAgICAgc2V0UHJldmlvdXNHYW1lU3RhdGUoZ2FtZVN0YXRlKTtcclxuICAgICAgICAgICAgICBzZXRHYW1lU3RhdGUoZGF0YS5nYW1lX3N0YXRlKTtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAncGxheWVyX2FkZGVkJzpcclxuICAgICAgICAgICAgY2FzZSAncGxheWVyX3JlbW92ZWQnOlxyXG4gICAgICAgICAgICAgIHNldFByZXZpb3VzR2FtZVN0YXRlKGdhbWVTdGF0ZSk7XHJcbiAgICAgICAgICAgICAgc2V0R2FtZVN0YXRlKHByZXYgPT4gKHtcclxuICAgICAgICAgICAgICAgIC4uLnByZXYsXHJcbiAgICAgICAgICAgICAgICBwbGF5ZXJzOiBkYXRhLnBsYXllcnNcclxuICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3RhYmxlX3Jlc2V0JzpcclxuICAgICAgICAgICAgICBzZXRQcmV2aW91c0dhbWVTdGF0ZShnYW1lU3RhdGUpO1xyXG4gICAgICAgICAgICAgIHNldEdhbWVTdGF0ZShkYXRhLmdhbWVfc3RhdGUpO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICd1bmRvX2NvbXBsZXRlZCc6XHJcbiAgICAgICAgICAgICAgaWYgKHByZXZpb3VzR2FtZVN0YXRlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB1bmRvbmVBY3Rpb24gPSBkZXRlcm1pbmVVbmRvbmVBY3Rpb24ocHJldmlvdXNHYW1lU3RhdGUsIGRhdGEuZ2FtZV9zdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICBhZGROb3RpZmljYXRpb24oYFVuZGlkICR7dW5kb25lQWN0aW9ufWAsICdpbmZvJyk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHNldFByZXZpb3VzR2FtZVN0YXRlKGdhbWVTdGF0ZSk7XHJcbiAgICAgICAgICAgICAgc2V0R2FtZVN0YXRlKGRhdGEuZ2FtZV9zdGF0ZSk7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2R1cGxpY2F0ZV9jYXJkJzpcclxuICAgICAgICAgICAgICBhZGROb3RpZmljYXRpb24oJ0R1cGxpY2F0ZSBjYXJkIGRldGVjdGVkJywgJ2Vycm9yJyk7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2Vycm9yJzpcclxuICAgICAgICAgICAgICBhZGROb3RpZmljYXRpb24oZGF0YS5tZXNzYWdlLCAnZXJyb3InKTtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnY2FyZF9hZGRlZCc6XHJcbiAgICAgICAgICAgICAgYWRkTm90aWZpY2F0aW9uKGBDYXJkIGFkZGVkIHRvICR7ZGF0YS50YXJnZXR9YCwgJ3N1Y2Nlc3MnKTtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVW5oYW5kbGVkIG1lc3NhZ2U6JywgZGF0YSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHByb2Nlc3NpbmcgbWVzc2FnZTonLCBlcnJvcik7XHJcbiAgICAgICAgICBhZGROb3RpZmljYXRpb24oJ0Vycm9yIHByb2Nlc3Npbmcgc2VydmVyIG1lc3NhZ2UnLCAnZXJyb3InKTtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBzZXRXcyh3ZWJzb2NrZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbm5lY3QoKTtcclxuXHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBpZiAod2Vic29ja2V0KSB7XHJcbiAgICAgICAgd2Vic29ja2V0LmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHJlY29ubmVjdFRpbWVvdXQpIHtcclxuICAgICAgICBjbGVhclRpbWVvdXQocmVjb25uZWN0VGltZW91dCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCBbbWVzc2FnZVF1ZXVlLCBzZXRNZXNzYWdlUXVldWVdID0gdXNlU3RhdGU8YW55W10+KFtdKTtcclxuXHJcbiAgLy8gUHJvY2VzcyBxdWV1ZWQgbWVzc2FnZXMgd2hlbiBjb25uZWN0aW9uIGlzIGVzdGFibGlzaGVkXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmIChpc0Nvbm5lY3RlZCAmJiBtZXNzYWdlUXVldWUubGVuZ3RoID4gMCkge1xyXG4gICAgICBtZXNzYWdlUXVldWUuZm9yRWFjaChtZXNzYWdlID0+IHtcclxuICAgICAgICBpZiAod3M/LnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5PUEVOKSB7XHJcbiAgICAgICAgICB3cy5zZW5kKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBzZXRNZXNzYWdlUXVldWUoW10pO1xyXG4gICAgfVxyXG4gIH0sIFtpc0Nvbm5lY3RlZCwgbWVzc2FnZVF1ZXVlLCB3c10pO1xyXG5cclxuICBjb25zdCBzZW5kTWVzc2FnZSA9IChtZXNzYWdlOiBhbnkpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGlmICh3cz8ucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0Lk9QRU4pIHtcclxuICAgICAgICB3cy5zZW5kKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnV2ViU29ja2V0IG5vdCByZWFkeSwgcXVldWVpbmcgbWVzc2FnZScpO1xyXG4gICAgICAgIHNldE1lc3NhZ2VRdWV1ZShwcmV2ID0+IFsuLi5wcmV2LCBtZXNzYWdlXSk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlbmRpbmcgbWVzc2FnZTonLCBlcnJvcik7XHJcbiAgICAgIHNldE1lc3NhZ2VRdWV1ZShwcmV2ID0+IFsuLi5wcmV2LCBtZXNzYWdlXSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxXZWJTb2NrZXRDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IFxyXG4gICAgICB3cywgXHJcbiAgICAgIGdhbWVTdGF0ZSwgXHJcbiAgICAgIHNlbmRNZXNzYWdlLCBcclxuICAgICAgaXNDb25uZWN0ZWQsXHJcbiAgICAgIG5vdGlmaWNhdGlvbnMsXHJcbiAgICAgIGFkZE5vdGlmaWNhdGlvbixcclxuICAgICAgcmVtb3ZlTm90aWZpY2F0aW9uXHJcbiAgICB9fT5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9XZWJTb2NrZXRDb250ZXh0LlByb3ZpZGVyPlxyXG4gICk7XHJcbn07Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImRlZmF1bHRHYW1lU3RhdGUiLCJkZWFsZXJfaGFuZCIsInBsYXllcnMiLCJnYW1lX3BoYXNlIiwid2lubmVycyIsIm1pbl9iZXQiLCJtYXhfYmV0IiwidGFibGVfbnVtYmVyIiwiV2ViU29ja2V0Q29udGV4dCIsIndzIiwiZ2FtZVN0YXRlIiwic2VuZE1lc3NhZ2UiLCJpc0Nvbm5lY3RlZCIsIm5vdGlmaWNhdGlvbnMiLCJhZGROb3RpZmljYXRpb24iLCJyZW1vdmVOb3RpZmljYXRpb24iLCJ1c2VXZWJTb2NrZXQiLCJXZWJTb2NrZXRQcm92aWRlciIsImNoaWxkcmVuIiwic2V0V3MiLCJzZXRHYW1lU3RhdGUiLCJzZXRJc0Nvbm5lY3RlZCIsInNldE5vdGlmaWNhdGlvbnMiLCJwcmV2aW91c0dhbWVTdGF0ZSIsInNldFByZXZpb3VzR2FtZVN0YXRlIiwibWVzc2FnZSIsInR5cGUiLCJpZCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsInByZXYiLCJmaWx0ZXIiLCJub3RpZmljYXRpb24iLCJkZXRlcm1pbmVVbmRvbmVBY3Rpb24iLCJvbGRTdGF0ZSIsIm5ld1N0YXRlIiwib2xkRGVhbGVyQ2FyZHMiLCJsZW5ndGgiLCJuZXdEZWFsZXJDYXJkcyIsInBsYXllcklkIiwib2xkUGxheWVyIiwiT2JqZWN0IiwiZW50cmllcyIsIm5ld1BsYXllciIsImhhc19hY3RlZCIsImFjdGlvbl90eXBlIiwiaGFuZCIsImFjdGl2ZSIsIndlYnNvY2tldCIsInJlY29ubmVjdFRpbWVvdXQiLCJjb25uZWN0IiwiV2ViU29ja2V0Iiwib25vcGVuIiwiY29uc29sZSIsImxvZyIsImNsZWFyVGltZW91dCIsIm9uY2xvc2UiLCJzZXRUaW1lb3V0Iiwib25lcnJvciIsImVycm9yIiwib25tZXNzYWdlIiwiZXZlbnQiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiYWN0aW9uIiwiZ2FtZV9zdGF0ZSIsInVuZG9uZUFjdGlvbiIsInRhcmdldCIsImNsb3NlIiwibWVzc2FnZVF1ZXVlIiwic2V0TWVzc2FnZVF1ZXVlIiwiZm9yRWFjaCIsInJlYWR5U3RhdGUiLCJPUEVOIiwic2VuZCIsInN0cmluZ2lmeSIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/WebSocketContext.tsx\n"));

/***/ })

});